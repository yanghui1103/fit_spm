<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/aop 
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx
     	   http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd">
           <!-- 采用注释的方式配置bean -->
	<context:annotation-config />
	<!--proxy-target-class="true"强制使用cglib代理   如果为false则spring会自动选择-->
	<aop:aspectj-autoproxy  proxy-target-class="true"/>
	<!-- 配置要扫描的包       -->
	<context:component-scan base-package="com.bw"></context:component-scan>
     
    <import resource="classpath:activiti-context.xml" />
    <import resource="classpath:com/bw/springConf/xml/webServiceSpring.xml" />
        <!-- 外围接口使用到的Bean配置文件 -->
    <import resource="classpath:com/bw/springConf/xml/allSysItemsActionConf.xml" />
	<!-- 数据库配置文件位置 -->
	
	<context:property-placeholder location="file:D:/eclipse/workspace/jdbc_spm.properties" />
	
<!-- 	<context:property-placeholder location="file:/var/db_pool/jdbc_spm.properties" /> -->
	
	<!-- 配置dbcp数据源 org.apache.commons.dbcp.BasicDataSource -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"   destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" /> 
		<property name="maxIdleTime" value="${jdbc.maxIdleTime}"></property> 
		<property name="acquireIncrement" value="${jdbc.acquireIncrement}"></property> 
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}"></property> 
		<property name="minPoolSize" value="${jdbc.minPoolSize}"></property> 
		<property name="initialPoolSize" value="${jdbc.initialPoolSize}"></property> 
		<property name="maxStatements" value="${jdbc.maxStatements}"></property> 
		<property name="acquireRetryAttempts" value="${jdbc.acquireRetryAttempts}"></property> 
		<property name="breakAfterAcquireFailure" value="${jdbc.breakAfterAcquireFailure}"></property> 
<!-- 		<property name="maxWait" value="${jdbc.maxWait}"></property>  -->
<!--                 <property name="testOnBorrow" value="false"/> -->
<!--                 <property name="testWhileIdle" value="true"/> -->
<!--                 <property name="testOnReturn" value="false"/> -->
                <!-- 5 min 每5分钟检测空闲连接超过10分钟的连接-->
<!--                 <property name="timeBetweenEvictionRunsMillis" value="300000" /> -->
<!--                 <property name="minEvictableIdleTimeMillis" value="600000" /> -->
<!--                 <property name="logAbandoned" value="true"/> -->
<!--                 <property name="removeAbandoned" value="true"/> -->
<!--                 <property name="removeAbandonedTimeout" value="180"/> -->
	</bean> 
	<!-- 配置mybitasSqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"  >
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>
	
	<!-- 配置SqlSessionTemplate -->
<!-- 	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype"> -->
<!-- 	    <constructor-arg  index="0"  name="sqlSessionFactory" ref="sqlSessionFactory" /> -->
<!-- 	</bean> -->
		
<!-- 配置事务管理器 -->
 <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">   
    		<property name="dataSource" ref="dataSource"/>
  </bean>
  <tx:advice id= "txAdvice"  transaction-manager="transactionManager">
			 <tx:attributes>
						<tx:method name="qry*"  	read-only="true"/>
						<tx:method name="get*"  	read-only="true"/>
						<tx:method name="find*"		read-only="true"/>
						<tx:method name="*"/>
			</tx:attributes>  
  </tx:advice>
	<!-- 使用annotation注解方式配置事务 -->
 	<tx:annotation-driven transaction-manager="transactionManager" /> 
 	
 	<!-- 切面测试 -->  
<!--  	<bean name="systemValidationAop"  class ="com.bw.common.uitily.SystemValidationAop"  /> -->
<!-- 	<aop:config> -->
<!-- 		<aop:aspect ref="systemValidationAop"> -->
<!-- 			<aop:before method="validationCheck2"  arg-names="cm"  pointcut="execution(* com.bw.fit.spm.card.service.impl.*.*(..)) and args(cm)"/> -->
<!-- 			<aop:before method="validationCheck"  arg-names="cm"  pointcut="execution(* com.bw.fit.spm.card.service.impl.*.*(..)) and args(cm)"/> -->
<!-- 		</aop:aspect> -->
<!-- 	</aop:config> -->
</beans>
